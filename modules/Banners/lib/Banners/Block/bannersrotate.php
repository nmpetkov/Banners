<?php
/**
 * @package      Banners
 * @version      $Id:
 * @author       Halbrook Technologies
 * @link         http://www.halbrooktech.com
 * @copyright    Copyright (C) 2010
 * @license      http://www.gnu.org/copyleft/gpl.html GNU General Public License
 */

class Banners_Block_Bannersrotate extends Zikula_Block
{
    /**
     * initialise block
     *
     * @author       The Zikula Development Team
     */
    public function init()
    {
        // Security
        SecurityUtil::registerPermissionSchema('Bannersrotate::', 'Block title::');
    }

    /**
     * get information on block
     *
     * @author       The Zikula Development Team
     * @return       array       The block information
     */
    public function info()
    {
        return array('text_type'       => $this->__('Rotating'),
                     'module'          => 'Banners',
                     'text_type_long'  => $this->__('Rotating Banner Display'),
                     'allow_multiple'  => true,
                     'form_content'    => false,
                     'form_refresh'    => false,
                     'show_preview'    => true,
                     'admin_tableless' => true);
    }

    /**
     * display block
     *
     * @author       The Zikula Development Team
     * @param        array       $blockinfo     a blockinfo structure
     * @return       output      the rendered bock
     */
    public function display($blockinfo)
    {
        if (!SecurityUtil::checkPermission('Bannersrotate::', "$blockinfo[title]::", ACCESS_READ)) {
            return;
        }

        // Get variables from content block
        $vars = BlockUtil::varsFromContent($blockinfo['content']);

        // Defaults
        if (!isset($vars['btype'])) {
            $vars['btype'] = 3;
        }
        if (!isset($vars['blocktemplate'])){
            $vars['blocktemplate']="blocks/rotate.tpl";
        }
        $blocktemplate = $vars['blocktemplate'];
        // Check if the Banners module is available.
        if (!ModUtil::available('Banners')) {
            return false;
        }

        // assign the banner
        $this->view->assign('banner', ModUtil::func('Banners', 'user', 'rotate', array('type' => $vars['btype'])));
        $this->view->assign('banners', $banner);
        // Populate block info and pass to theme
        $blockinfo['content'] = $this->view->fetch($blocktemplate);

        return BlockUtil::themeBlock($blockinfo);
    }

    /**
     * modify block settings
     *
     * @author       The Zikula Development Team
     * @param        array       $blockinfo     a blockinfo structure
     * @return       output      the block form
     */
    public function modify($blockinfo)
    {
        // Get current content
        $vars = BlockUtil::varsFromContent($blockinfo['content']);

        // Defaults
        if (!isset($vars['btype'])) {
            $vars['btype'] = 3;
        }

        // Create output object
        $render = Renderer::getInstance('Banners', false);

        // assign the approriate values
        $this->view->assign($vars);

        // Return the output that has been generated by this function
        return $this->view->fetch('blocks/rotate_modify.tpl');
    }

    /**
     * update block settings
     *
     * @author       The Zikula Development Team
     * @param        array       $blockinfo     a blockinfo structure
     * @return       $blockinfo  the modified blockinfo structure
     */
    public function update($blockinfo)
    {
        // Get current content
        $vars = BlockUtil::varsFromContent($blockinfo['content']);

        // alter the corresponding variable
        $vars['btype'] = FormUtil::getPassedValue('btype', null, 'POST');

        // write back the new contents
        $blockinfo['content'] = BlockUtil::varsToContent($vars);

        $this->view->clear_cache('blocks/fade.tpl');

        return $blockinfo;
    }
}